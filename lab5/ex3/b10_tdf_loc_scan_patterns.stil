STIL 1.0 { Design 2005; }
Header {
   Title "  TetraMAX(R)  M-2016.12-i161121_175624 STIL output";
   Date "Sun Dec  1 19:57:42 2019";
   Source "Minimal STIL for design `b10'";
   History {
      Ann {*  Incoming_Date "Sun Dec  1 19:57:33 2019"  *}
      Ann {*  Incoming_Src "DFT Compiler O-2018.06-SP4"  *}
      Ann {*     Uncollapsed Stuck Fault Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* fault class                     code   #faults *}
      Ann {* ------------------------------  ----  --------- *}
      Ann {* Detected                         DT       1206 *}
      Ann {*   detected_by_simulation         DS      (1048) *}
      Ann {*   detected_by_implication        DI       (158) *}
      Ann {* Possibly detected                PT          0 *}
      Ann {* Undetectable                     UD          0 *}
      Ann {* ATPG untestable                  AU          0 *}
      Ann {* Not detected                     ND          0 *}
      Ann {* ----------------------------------------------- *}
      Ann {* total faults                              1206 *}
      Ann {* test coverage                           100.00% *}
      Ann {* fault coverage                          100.00% *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {*            Pattern Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* #internal patterns                          50 *}
      Ann {*     #basic_scan patterns                    50 *}
      Ann {* #external patterns (b10_tdf_los_scan_patterns.stil)     48 *}
      Ann {*     #basic_scan patterns                    48 *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {* There are no rule fails *}
      Ann {* clock_name        off  usage *}
      Ann {* ----------------  ---  -------------------------- *}
      Ann {* clock              0   master shift  *}
      Ann {* reset              0   master reset  *}
      Ann {*  *}
      Ann {* There are no constraint ports *}
      Ann {* There are no equivalent pins *}
      Ann {* There are no net connections *}
      Ann {* top_module_name = b10 *}
      Ann {* Unified STIL Flow *}
      Ann {* serial_flag = 0 *}
   }
}
Signals {
   "r_button" In; "g_button" In; "key" In; "start" In; "reset" In; "test" In; "rts" In;
   "rtr" In; "clock" In; "v_in[3]" In; "v_in[2]" In; "v_in[1]" In; "v_in[0]" In; "test_si1" In
   { ScanIn; } "test_si2" In { ScanIn; } "test_si3" In { ScanIn; } "test_si4" In {
   ScanIn; } "test_se" In; "cts" Out { ScanOut; } "ctr" Out; "v_out[3]" Out { ScanOut;
   } "v_out[2]" Out; "v_out[1]" Out; "v_out[0]" Out; "test_so2" Out { ScanOut; } "test_so4" Out
   { ScanOut; }
}
SignalGroups {
   "_pi" = '"clock" + "g_button" + "key" + "r_button" + "reset" + "rtr" + "rts" +
   "start" + "test" + "v_in[0]" + "v_in[1]" + "v_in[2]" + "v_in[3]" + "test_si1" +
   "test_si2" + "test_si3" + "test_si4" + "test_se"'; // #signals=18
   "_in" = '"r_button" + "g_button" + "key" + "start" + "reset" + "test" + "rts" +
   "rtr" + "clock" + "v_in[3]" + "v_in[2]" + "v_in[1]" + "v_in[0]" + "test_si1" +
   "test_si2" + "test_si3" + "test_si4" + "test_se"'; // #signals=18
   "all_inputs" = '"clock" + "g_button" + "key" + "r_button" + "reset" + "rtr" +
   "rts" + "start" + "test" + "v_in[0]" + "v_in[1]" + "v_in[2]" + "v_in[3]" +
   "test_si1" + "test_si2" + "test_si3" + "test_si4" + "test_se"'; // #signals=18
   "_po" = '"ctr" + "cts" + "v_out[0]" + "v_out[1]" + "v_out[2]" + "v_out[3]" +
   "test_so2" + "test_so4"'; // #signals=8
   "_si" = '"test_si1" + "test_si2" + "test_si3" + "test_si4"' { ScanIn; } // #signals=4
   "all_outputs" = '"ctr" + "cts" + "v_out[0]" + "v_out[1]" + "v_out[2]" +
   "v_out[3]" + "test_so2" + "test_so4"'; // #signals=8
   "all_ports" = '"all_inputs" + "all_outputs"'; // #signals=26
   "_clk" = '"clock" + "reset"'; // #signals=2
   "_so" = '"cts" + "v_out[3]" + "test_so2" + "test_so4"' { ScanOut; } // #signals=4
   "_out" = '"cts" + "ctr" + "v_out[3]" + "v_out[2]" + "v_out[1]" + "v_out[0]" +
   "test_so2" + "test_so4"'; // #signals=8
}
Timing {
   WaveformTable "_allclock_launch_capture_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_multiclock_capture_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_allclock_launch_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_allclock_capture_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_default_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
}
ScanStructures {
   ScanChain "1" {
      ScanLength 5;
      ScanIn "test_si1";
      ScanOut "cts";
      ScanInversion 0;
      ScanCells "b10.ctr_reg.SI" "b10.last_g_reg.SI" "b10.last_r_reg.SI" "b10.\sign_reg[3] .SI" 
      "b10.cts_reg.SI" ;
      ScanMasterClock "clock" ;
   }
   ScanChain "2" {
      ScanLength 4;
      ScanIn "test_si2";
      ScanOut "test_so2";
      ScanInversion 0;
      ScanCells "b10.\stato_reg[0] .SI" "b10.\stato_reg[1] .SI" "b10.\stato_reg[2] .SI" 
      "b10.\stato_reg[3] .SI" ;
      ScanMasterClock "clock" ;
   }
   ScanChain "3" {
      ScanLength 4;
      ScanIn "test_si3";
      ScanOut "v_out[3]";
      ScanInversion 0;
      ScanCells "b10.\v_out_reg[0] .SI" "b10.\v_out_reg[1] .SI" "b10.\v_out_reg[2] .SI" 
      "b10.\v_out_reg[3] .SI" ;
      ScanMasterClock "clock" ;
   }
   ScanChain "4" {
      ScanLength 4;
      ScanIn "test_si4";
      ScanOut "test_so4";
      ScanInversion 0;
      ScanCells "b10.voto0_reg.SI" "b10.voto1_reg.SI" "b10.voto2_reg.SI" "b10.voto3_reg.SI" ;
      ScanMasterClock "clock" ;
   }
}
PatternBurst "_burst_" {
   PatList { "_pattern_" {
   }
}}
PatternExec {
   PatternBurst "_burst_";
}
Procedures {
   "multiclock_capture" {
      W "_multiclock_capture_WFT_";
      C { "all_inputs"=0NNN0\r13 N ; "all_outputs"=\r8 X ; }
      V { "_pi"=\r18 # ; "_po"=\r8 # ; }
   }
   "allclock_capture" {
      W "_allclock_capture_WFT_";
      C { "all_inputs"=0NNN0\r13 N ; "all_outputs"=\r8 X ; }
      V { "_pi"=\r18 # ; "_po"=\r8 # ; }
   }
   "allclock_launch" {
      W "_allclock_launch_WFT_";
      C { "all_inputs"=0NNN0\r13 N ; "all_outputs"=\r8 X ; }
      V { "_pi"=\r18 # ; "_po"=\r8 # ; }
   }
   "allclock_launch_capture" {
      W "_allclock_launch_capture_WFT_";
      C { "all_inputs"=0NNN0\r13 N ; "all_outputs"=\r8 X ; }
      V { "_pi"=\r18 # ; "_po"=\r8 # ; }
   }
   "load_unload" {
      W "_default_WFT_";
      C { "all_inputs"=0NNN0\r13 N ; "all_outputs"=\r8 X ; }
      "Internal_scan_pre_shift": V { "test_se"=1; }
      Shift {          W "_default_WFT_";
         V { "_clk"=P0; "_si"=####; "_so"=####; }
      }
   }
}
MacroDefs {
   "test_setup" {
      W "_default_WFT_";
      C { "all_inputs"=\r18 N ; "all_outputs"=\r8 X ; }
      V { "clock"=0; "reset"=0; }
      V { }
   }
}
Pattern "_pattern_" {
   W "_multiclock_capture_WFT_";
   "precondition all Signals": C { "_pi"=\r18 0 ; "_po"=\r8 X ; }
   Macro "test_setup";
   Ann {* chain_test *}
   "pattern 0": Call "load_unload" { 
      "test_si1"=00110; "test_si2"=0011; "test_si3"=0011; "test_si4"=0011; }
   Call "multiclock_capture" { 
      "_pi"=000100110000011111; "_po"=LLHHLLLL; }
   "pattern 1": Call "load_unload" { 
      "cts"=LLHHL; "test_so2"=LLHH; "v_out[3]"=LLHH; "test_so4"=LLHH; "test_si1"=11101; 
      "test_si2"=0010; "test_si3"=1111; "test_si4"=1110; }
   Call "multiclock_capture" { 
      "_pi"=P11101111010001110; "_po"=HHHHHHLH; }
   "pattern 2": Call "load_unload" { 
      "cts"=HHHHH; "test_so2"=LLHL; "v_out[3]"=HHHH; "test_so4"=HHLH; "test_si1"=01001; 
      "test_si2"=0011; "test_si3"=0101; "test_si4"=0111; }
   Call "multiclock_capture" { 
      "_pi"=P10101010000111000; "_po"=HLHLHLLL; }
   "pattern 3": Call "load_unload" { 
      "cts"=LHLLH; "test_so2"=LHLL; "v_out[3]"=LHLH; "test_so4"=HHHL; "test_si1"=00111; 
      "test_si2"=0110; "test_si3"=0100; "test_si4"=1001; }
   Call "multiclock_capture" { 
      "_pi"=P01000101111010010; "_po"=HLLLHLLH; }
   "pattern 4": Call "load_unload" { 
      "cts"=LLHHL; "test_so2"=LHHH; "v_out[3]"=LHLL; "test_so4"=LHHH; "test_si1"=10011; 
      "test_si2"=0011; "test_si3"=0010; "test_si4"=1101; }
   Call "multiclock_capture" { 
      "_pi"=P01001000110110110; "_po"=HHLHLLLH; }
   "pattern 5": Call "load_unload" { 
      "cts"=HLLHH; "test_so2"=LHLL; "v_out[3]"=LLHL; "test_so4"=LHLL; "test_si1"=01010; 
      "test_si2"=0100; "test_si3"=0111; "test_si4"=0000; }
   Call "multiclock_capture" { 
      "_pi"=P00001010111101010; "_po"=LLHHHLLL; }
   "pattern 6": Call "load_unload" { 
      "cts"=HHLHL; "test_so2"=LHLH; "v_out[3]"=LLLL; "test_so4"=LLLL; "test_si1"=11001; 
      "test_si2"=0010; "test_si3"=1000; "test_si4"=1111; }
   Call "multiclock_capture" { 
      "_pi"=P00000101001001010; "_po"=HHLLLHLH; }
   "pattern 7": Call "load_unload" { 
      "cts"=HHLLH; "test_so2"=LLHH; "v_out[3]"=HLLL; "test_so4"=HHHH; "test_si1"=10011; 
      "test_si2"=1101; "test_si3"=1111; "test_si4"=1101; }
   Call "multiclock_capture" { 
      "_pi"=0000P1101010000101; "_po"=HHHHHHHH; }
   "pattern 8": Call "load_unload" { 
      "cts"=LLLLL; "test_so2"=LLLL; "v_out[3]"=LLLL; "test_so4"=LLLL; "test_si1"=01010; 
      "test_si2"=0010; "test_si3"=1111; "test_si4"=0000; }
   Call "multiclock_capture" { 
      "_pi"=P11001010100111100; "_po"=LLHHHHLL; }
   "pattern 9": Call "load_unload" { 
      "cts"=LHLHL; "test_so2"=LLHL; "v_out[3]"=HHHH; "test_so4"=LLLH; "test_si1"=00111; 
      "test_si2"=1001; "test_si3"=0110; "test_si4"=0000; }
   Call "multiclock_capture" { 
      "_pi"=P11001011101111110; "_po"=HLLHHLHL; }
   "pattern 10": Call "load_unload" { 
      "cts"=LHHHH; "test_so2"=HLLH; "v_out[3]"=LHHL; "test_so4"=HHLH; "test_si1"=01101; 
      "test_si2"=0010; "test_si3"=1101; "test_si4"=0101; }
   Call "multiclock_capture" { 
      "_pi"=P01000110011001110; "_po"=HLHLHHLL; }
   "pattern 11": Call "load_unload" { 
      "cts"=LHLLH; "test_so2"=LLHL; "v_out[3]"=HHLH; "test_so4"=LHLH; "test_si1"=00001; 
      "test_si2"=1010; "test_si3"=1001; "test_si4"=0110; }
   Call "multiclock_capture" { 
      "_pi"=P10001110110011000; "_po"=HLHLLHHL; }
   "pattern 12": Call "load_unload" { 
      "cts"=LLLLH; "test_so2"=LHLL; "v_out[3]"=HLLH; "test_so4"=LHHH; "test_si1"=00111; 
      "test_si2"=0110; "test_si3"=0101; "test_si4"=1100; }
   Call "multiclock_capture" { 
      "_pi"=P01001100100100010; "_po"=HLHLHLLH; }
   "pattern 13": Call "load_unload" { 
      "cts"=LLHHL; "test_so2"=LHHH; "v_out[3]"=LHLH; "test_so4"=HLLH; "test_si1"=10100; 
      "test_si2"=0001; "test_si3"=0100; "test_si4"=0110; }
   Call "multiclock_capture" { 
      "_pi"=P00000010001110000; "_po"=LHLLHLLL; }
   "pattern 14": Call "load_unload" { 
      "cts"=LLHLL; "test_so2"=LLHL; "v_out[3]"=LHLL; "test_so4"=LLLL; "test_si1"=10001; 
      "test_si2"=0100; "test_si3"=1100; "test_si4"=0110; }
   Call "multiclock_capture" { 
      "_pi"=P00101111011110110; "_po"=HHLLHHLL; }
   "pattern 15": Call "load_unload" { 
      "cts"=HLLLH; "test_so2"=HLLL; "v_out[3]"=LHHL; "test_so4"=LHHL; "test_si1"=00101; 
      "test_si2"=0100; "test_si3"=1100; "test_si4"=0111; }
   Call "multiclock_capture" { 
      "_pi"=P10101101111001010; "_po"=HLLLHHLL; }
   "pattern 16": Call "load_unload" { 
      "cts"=HLHLH; "test_so2"=LHLH; "v_out[3]"=LHHH; "test_so4"=LHHH; "test_si1"=00011; 
      "test_si2"=1000; "test_si3"=1010; "test_si4"=1000; }
   Call "multiclock_capture" { 
      "_pi"=P11001010110101010; "_po"=HLLHLHHH; }
   "pattern 17": Call "load_unload" { 
      "cts"=LLLHH; "test_so2"=HLLL; "v_out[3]"=HLHL; "test_so4"=HLLL; "test_si1"=01100; 
      "test_si2"=0101; "test_si3"=0011; "test_si4"=0110; }
   Call "multiclock_capture" { 
      "_pi"=P01101001101101010; "_po"=LLHHLLLL; }
   "pattern 18": Call "load_unload" { 
      "cts"=LHHLH; "test_so2"=LHHL; "v_out[3]"=LLHH; "test_so4"=LHHL; "test_si1"=01010; 
      "test_si2"=0111; "test_si3"=1010; "test_si4"=1101; }
   Call "multiclock_capture" { 
      "_pi"=P10001110011010100; "_po"=LLLHLHLH; }
   "pattern 19": Call "load_unload" { 
      "cts"=LHLHL; "test_so2"=LHHH; "v_out[3]"=HLHL; "test_so4"=HHLH; "test_si1"=11110; 
      "test_si2"=0100; "test_si3"=0101; "test_si4"=0010; }
   Call "multiclock_capture" { 
      "_pi"=P01101001110101010; "_po"=LHHLHLLL; }
   "pattern 20": Call "load_unload" { 
      "cts"=HHHHL; "test_so2"=LHLH; "v_out[3]"=LLHL; "test_so4"=LLHL; "test_si1"=00011; 
      "test_si2"=0110; "test_si3"=0111; "test_si4"=1111; }
   Call "multiclock_capture" { 
      "_pi"=P10000010101110100; "_po"=HLHHHLLH; }
   "pattern 21": Call "load_unload" { 
      "cts"=LLLHH; "test_so2"=LHHL; "v_out[3]"=LHHH; "test_so4"=HHHH; "test_si1"=01101; 
      "test_si2"=0000; "test_si3"=1011; "test_si4"=0110; }
   Call "multiclock_capture" { 
      "_pi"=P01101000011011010; "_po"=HLHHLHLL; }
   "pattern 22": Call "load_unload" { 
      "cts"=LLHLL; "test_so2"=HLLH; "v_out[3]"=HLHH; "test_so4"=LLLL; "test_si1"=01111; 
      "test_si2"=1000; "test_si3"=0100; "test_si4"=0001; }
   Call "multiclock_capture" { 
      "_pi"=0100P0000110110010; "_po"=HLLLHLHL; }
   "pattern 23": Call "load_unload" { 
      "cts"=LLLLL; "test_so2"=LLLL; "v_out[3]"=LLLL; "test_so4"=LLLL; "test_si1"=10111; 
      "test_si2"=0100; "test_si3"=1011; "test_si4"=1011; }
   Call "multiclock_capture" { 
      "_pi"=0010P0110101000110; "_po"=HHHHLHLH; }
   "pattern 24": Call "load_unload" { 
      "cts"=LLLLL; "test_so2"=LLLL; "v_out[3]"=LLLL; "test_so4"=LLLL; "test_si1"=01010; 
      "test_si2"=0010; "test_si3"=0001; "test_si4"=0000; }
   Call "multiclock_capture" { 
      "_pi"=P01101111010001100; "_po"=LLHLLLLL; }
   "pattern 25": Call "load_unload" { 
      "cts"=LHHLL; "test_so2"=LLHL; "v_out[3]"=LLLH; "test_so4"=LHLH; "test_si1"=11101; 
      "test_si2"=0011; "test_si3"=0011; "test_si4"=1110; }
   Call "multiclock_capture" { 
      "_pi"=P10000110001101100; "_po"=HHHHLLLH; }
   "pattern 26": Call "load_unload" { 
      "cts"=HHHLH; "test_so2"=LHLL; "v_out[3]"=LLHH; "test_so4"=LHHL; "test_si1"=01001; 
      "test_si2"=0100; "test_si3"=1110; "test_si4"=1001; }
   Call "multiclock_capture" { 
      "_pi"=P01100001011100110; "_po"=HLLHHHLH; }
   "pattern 27": Call "load_unload" { 
      "cts"=LHLLH; "test_so2"=LHLL; "v_out[3]"=HHHL; "test_so4"=HLLH; "test_si1"=11100; 
      "test_si2"=0111; "test_si3"=0111; "test_si4"=1101; }
   Call "multiclock_capture" { 
      "_pi"=P10000000111111100; "_po"=LHHHHLLH; }
   "pattern 28": Call "load_unload" { 
      "cts"=LHHLL; "test_so2"=LHLL; "v_out[3]"=LHHH; "test_so4"=HHLH; "test_si1"=01000; 
      "test_si2"=0010; "test_si3"=1101; "test_si4"=1001; }
   Call "multiclock_capture" { 
      "_pi"=P00100010111011110; "_po"=LLHLHHLH; }
   "pattern 29": Call "load_unload" { 
      "cts"=LHLLL; "test_so2"=LLHL; "v_out[3]"=HHLH; "test_so4"=LLLL; "test_si1"=11010; 
      "test_si2"=0000; "test_si3"=1101; "test_si4"=1001; }
   Call "multiclock_capture" { 
      "_pi"=P10000011110011110; "_po"=LHHLHHLH; }
   "pattern 30": Call "load_unload" { 
      "cts"=LHLHL; "test_so2"=LLLH; "v_out[3]"=HHLH; "test_so4"=LLLL; "test_si1"=11101; 
      "test_si2"=1000; "test_si3"=1101; "test_si4"=1010; }
   Call "multiclock_capture" { 
      "_pi"=P01000000100011110; "_po"=HHHLHHHH; }
   "pattern 31": Call "load_unload" { 
      "cts"=LHHLH; "test_so2"=LLLH; "v_out[3]"=HHLH; "test_so4"=HLHL; "test_si1"=10000; 
      "test_si2"=1001; "test_si3"=0000; "test_si4"=1101; }
   Call "multiclock_capture" { 
      "_pi"=P01001000011100100; "_po"=LHLLLLHH; }
   "pattern 32": Call "load_unload" { 
      "cts"=HHLLL; "test_so2"=HLLH; "v_out[3]"=LLLL; "test_so4"=HHHL; "test_si1"=00001; 
      "test_si2"=0011; "test_si3"=1111; "test_si4"=0100; }
   Call "multiclock_capture" { 
      "_pi"=P00100010101100010; "_po"=HLHHHHLL; }
   "pattern 33": Call "load_unload" { 
      "cts"=LLLLH; "test_so2"=LHLL; "v_out[3]"=HHHH; "test_so4"=HHLL; "test_si1"=01000; 
      "test_si2"=0001; "test_si3"=0100; "test_si4"=0001; }
   Call "multiclock_capture" { 
      "_pi"=P11001011001110100; "_po"=LLLLHLLL; }
   "pattern 34": Call "load_unload" { 
      "cts"=HHLLL; "test_so2"=LLHL; "v_out[3]"=LHLL; "test_so4"=LLLL; "test_si1"=10100; 
      "test_si2"=0011; "test_si3"=0111; "test_si4"=1001; }
   Call "multiclock_capture" { 
      "_pi"=P00101110001001110; "_po"=LHHHHLLH; }
   "pattern 35": Call "load_unload" { 
      "cts"=HLHLL; "test_so2"=LHLL; "v_out[3]"=LHHH; "test_so4"=HLLL; "test_si1"=11001; 
      "test_si2"=0011; "test_si3"=1010; "test_si4"=0011; }
   Call "multiclock_capture" { 
      "_pi"=P11100001000000010; "_po"=HHLHLHLL; }
   "pattern 36": Call "load_unload" { 
      "cts"=HHLLH; "test_so2"=LHLL; "v_out[3]"=HLHL; "test_so4"=LLHL; "test_si1"=10111; 
      "test_si2"=1011; "test_si3"=0011; "test_si4"=1001; }
   Call "multiclock_capture" { 
      "_pi"=P11000110111100000; "_po"=HHHHLLHH; }
   "pattern 37": Call "load_unload" { 
      "cts"=HLHHH; "test_so2"=HLHH; "v_out[3]"=LLHH; "test_so4"=HLLH; "test_si1"=11001; 
      "test_si2"=0010; "test_si3"=0001; "test_si4"=0100; }
   Call "multiclock_capture" { 
      "_pi"=P11100011010100100; "_po"=HHHLLLLL; }
   "pattern 38": Call "load_unload" { 
      "cts"=HHHHH; "test_so2"=LLHL; "v_out[3]"=LLLH; "test_so4"=LLHH; "test_si1"=00011; 
      "test_si2"=0001; "test_si3"=0100; "test_si4"=1111; }
   Call "multiclock_capture" { 
      "_pi"=P00100101111100010; "_po"=HLLLHLLH; }
   "pattern 39": Call "load_unload" { 
      "cts"=LLLHH; "test_so2"=LLLH; "v_out[3]"=LHLL; "test_so4"=HHHH; "test_si1"=11000; 
      "test_si2"=1010; "test_si3"=1011; "test_si4"=1101; }
   Call "multiclock_capture" { 
      "_pi"=P11000100000110100; "_po"=LHHHLHHH; }
   "pattern 40": Call "load_unload" { 
      "cts"=HHLLL; "test_so2"=LHLL; "v_out[3]"=HLHH; "test_so4"=HHLL; "test_si1"=11101; 
      "test_si2"=0100; "test_si3"=1001; "test_si4"=1110; }
   Call "multiclock_capture" { 
      "_pi"=P01001010001001010; "_po"=HHHLLHLH; }
   "pattern 41": Call "load_unload" { 
      "cts"=HHHLH; "test_so2"=LHLH; "v_out[3]"=HHHL; "test_so4"=HHHL; "test_si1"=10001; 
      "test_si2"=0100; "test_si3"=1100; "test_si4"=0110; }
   Call "multiclock_capture" { 
      "_pi"=P00100011010100100; "_po"=HHLLHHLL; }
   "pattern 42": Call "load_unload" { 
      "cts"=HLLLH; "test_so2"=LHLL; "v_out[3]"=HHLL; "test_so4"=LHHL; "test_si1"=00111; 
      "test_si2"=1001; "test_si3"=1001; "test_si4"=1111; }
   Call "multiclock_capture" { 
      "_pi"=P11101101111100110; "_po"=HLHLLHHH; }
   "pattern 43": Call "load_unload" { 
      "cts"=LHHHH; "test_so2"=HLHL; "v_out[3]"=HLLH; "test_so4"=HHHH; "test_si1"=00000; 
      "test_si2"=0010; "test_si3"=1011; "test_si4"=0001; }
   Call "multiclock_capture" { 
      "_pi"=0101P0110101010111; "_po"=LLHHLHLL; }
   "pattern 44": Call "load_unload" { 
      "cts"=LLLLL; "test_so2"=LLLL; "v_out[3]"=LLLL; "test_so4"=LLLL; "test_si1"=11100; 
      "test_si2"=0100; "test_si3"=0001; "test_si4"=0100; }
   Call "multiclock_capture" { 
      "_pi"=P11001001010011010; "_po"=LHHLLLLL; }
   "pattern 45": Call "load_unload" { 
      "cts"=HHHLL; "test_so2"=LHLH; "v_out[3]"=LHLL; "test_so4"=LHLL; "test_si1"=10111; 
      "test_si2"=1001; "test_si3"=1000; "test_si4"=0010; }
   Call "multiclock_capture" { 
      "_pi"=P00101110110101000; "_po"=HHLLLHHL; }
   "pattern 46": Call "load_unload" { 
      "cts"=HHHHH; "test_so2"=HLLH; "v_out[3]"=HLLL; "test_so4"=HLHH; "test_si1"=10101; 
      "test_si2"=1001; "test_si3"=0110; "test_si4"=0110; }
   Call "multiclock_capture" { 
      "_pi"=P10101001111010100; "_po"=HHLHHLHL; }
   "pattern 47": Call "load_unload" { 
      "cts"=HHHLH; "test_so2"=HLLH; "v_out[3]"=LHHL; "test_so4"=LHHH; "test_si1"=10001; 
      "test_si2"=1101; "test_si3"=0010; "test_si4"=1011; }
   Call "multiclock_capture" { 
      "_pi"=P10001100011011110; "_po"=HHLHLLHH; }
   "pattern 48": Call "load_unload" { 
      "cts"=HLLLH; "test_so2"=HHLH; "v_out[3]"=LLHL; "test_so4"=HLHH; "test_si1"=11001; 
      "test_si2"=0010; "test_si3"=1011; "test_si4"=1110; }
   Call "multiclock_capture" { 
      "_pi"=P01100000100001010; "_po"=HHHHLHLH; }
   "pattern 49": Call "load_unload" { 
      "cts"=HHLLH; "test_so2"=LLHH; "v_out[3]"=HLHH; "test_so4"=HHHL; "test_si1"=11101; 
      "test_si2"=0101; "test_si3"=1110; "test_si4"=1001; }
   Call "multiclock_capture" { 
      "_pi"=P10100100000010100; "_po"=HHLHHHLH; }
   "end 49 unload": Call "load_unload" { 
      "cts"=HHHLH; "test_so2"=LHLH; "v_out[3]"=HHHL; "test_so4"=HLLH; }
}

// Patterns reference 154 V statements, generating 358 test cycles
