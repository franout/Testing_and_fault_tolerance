STIL 1.0 { Design 2005; }
Header {
   Title "  TetraMAX(R)  M-2016.12-i161121_175624 STIL output";
   Date "Sun Dec  1 16:13:14 2019";
   History {
      Ann {*     Uncollapsed Stuck Fault Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* fault class                     code   #faults *}
      Ann {* ------------------------------  ----  --------- *}
      Ann {* Detected                         DT        432 *}
      Ann {*   detected_by_simulation         DS       (350) *}
      Ann {*   detected_by_implication        DI        (82) *}
      Ann {* Possibly detected                PT          0 *}
      Ann {* Undetectable                     UD          0 *}
      Ann {* ATPG untestable                  AU          0 *}
      Ann {* Not detected                     ND          0 *}
      Ann {* ----------------------------------------------- *}
      Ann {* total faults                               432 *}
      Ann {* test coverage                           100.00% *}
      Ann {* fault coverage                          100.00% *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {*            Pattern Summary Report *}
      Ann {* ----------------------------------------------- *}
      Ann {* #internal patterns                          17 *}
      Ann {*     #basic_scan patterns                    17 *}
      Ann {* ----------------------------------------------- *}
      Ann {*  *}
      Ann {* There are no rule fails *}
      Ann {* clock_name        off  usage *}
      Ann {* ----------------  ---  -------------------------- *}
      Ann {* clock              0   master shift  *}
      Ann {* reset              0   master reset  *}
      Ann {*  *}
      Ann {* There are no constraint ports *}
      Ann {* There are no equivalent pins *}
      Ann {* There are no net connections *}
      Ann {* top_module_name = b06 *}
      Ann {* Unified STIL Flow *}
      Ann {* serial_flag = 0 *}
   }
}
Signals {
   "eql" In; "clock" In; "reset" In; "cont_eql" In; "test_si" In { ScanIn; } "test_se" In;
   "cc_mux[2]" Out; "cc_mux[1]" Out; "uscite[2]" Out { ScanOut; } "uscite[1]" Out;
   "enable_count" Out; "ackout" Out;
}
SignalGroups {
   "_pi" = '"clock" + "cont_eql" + "eql" + "reset" + "test_si" + "test_se"'; // #signals=6
   "all_inputs" = '"clock" + "cont_eql" + "eql" + "reset" + "test_si" +
   "test_se"'; // #signals=6
   "all_outputs" = '"ackout" + "cc_mux[1]" + "cc_mux[2]" + "enable_count" +
   "uscite[1]" + "uscite[2]"'; // #signals=6
   "all_ports" = '"all_inputs" + "all_outputs"'; // #signals=12
   "_in" = '"eql" + "clock" + "reset" + "cont_eql" + "test_si" + "test_se"'; // #signals=6
   "_clk" = '"clock" + "reset"'; // #signals=2
   "_so" = '"uscite[2]"' { ScanOut; } // #signals=1
   "_po" = '"ackout" + "cc_mux[1]" + "cc_mux[2]" + "enable_count" + "uscite[1]" +
   "uscite[2]"'; // #signals=6
   "_out" = '"cc_mux[2]" + "cc_mux[1]" + "uscite[2]" + "uscite[1]" +
   "enable_count" + "ackout"'; // #signals=6
   "_si" = '"test_si"' { ScanIn; } // #signals=1
}
Timing {
   WaveformTable "_allclock_launch_capture_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_allclock_launch_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_default_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_multiclock_capture_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
   WaveformTable "_allclock_capture_WFT_" {
      Period '100ns';
      Waveforms {
         "all_inputs" { 0 { '0ns' D; } }
         "all_inputs" { 1 { '0ns' U; } }
         "all_inputs" { Z { '0ns' Z; } }
         "all_inputs" { N { '0ns' N; } }
         "all_outputs" { X { '0ns' X; '40ns' X; } }
         "all_outputs" { H { '0ns' X; '40ns' H; } }
         "all_outputs" { T { '0ns' X; '40ns' T; } }
         "all_outputs" { L { '0ns' X; '40ns' L; } }
         "clock" { P { '0ns' D; '45ns' U; '55ns' D; } }
         "reset" { P { '0ns' D; '45ns' U; '55ns' D; } }
      }
   }
}
ScanStructures {
   ScanChain "1" {
      ScanLength 9;
      ScanIn "test_si";
      ScanOut "uscite[2]";
      ScanInversion 0;
      ScanCells "b06.ackout_reg.SI" "b06.\cc_mux_reg[1] .SI" "b06.\cc_mux_reg[2] .SI" 
      "b06.enable_count_reg.SI" "b06.\state_reg[0] .SI" "b06.\state_reg[1] .SI" 
      "b06.\state_reg[2] .SI" "b06.\uscite_reg[1] .SI" "b06.\uscite_reg[2] .SI" ;
      ScanMasterClock "clock" ;
   }
}
PatternBurst "_burst_" {
   PatList { "_pattern_" {
   }
}}
PatternExec {
   PatternBurst "_burst_";
}
Procedures {
   "multiclock_capture" {
      W "_multiclock_capture_WFT_";
      C { "all_inputs"=0NN0NN; "all_outputs"=XXXXXX; }
      V { "_pi"=######; "_po"=######; }
   }
   "allclock_capture" {
      W "_allclock_capture_WFT_";
      C { "all_inputs"=0NN0NN; "all_outputs"=XXXXXX; }
      V { "_pi"=######; "_po"=######; }
   }
   "allclock_launch" {
      W "_allclock_launch_WFT_";
      C { "all_inputs"=0NN0NN; "all_outputs"=XXXXXX; }
      V { "_pi"=######; "_po"=######; }
   }
   "allclock_launch_capture" {
      W "_allclock_launch_capture_WFT_";
      C { "all_inputs"=0NN0NN; "all_outputs"=XXXXXX; }
      V { "_pi"=######; "_po"=######; }
   }
   "load_unload" {
      W "_default_WFT_";
      C { "all_inputs"=0NN0NN; "all_outputs"=XXXXXX; }
      "Internal_scan_pre_shift": V { "test_se"=1; }
      Shift {          W "_default_WFT_";
         V { "_clk"=P0; "_si"=#; "_so"=#; }
      }
   }
}
MacroDefs {
   "test_setup" {
      W "_default_WFT_";
      C { "all_inputs"=NNNNNN; "all_outputs"=XXXXXX; }
      V { "clock"=0; "reset"=0; }
      V { }
   }
}
Pattern "_pattern_" {
   W "_multiclock_capture_WFT_";
   "precondition all Signals": C { "_pi"=000000; "_po"=XXXXXX; }
   Macro "test_setup";
   Ann {* chain_test *}
   "pattern 0": Call "load_unload" { 
      "test_si"=001100110; }
   Call "multiclock_capture" { 
      "_pi"=000011; "_po"=LHHLLL; }
   "pattern 1": Call "load_unload" { 
      "uscite[2]"=LLHHLLHHL; "test_si"=011100000; }
   Call "multiclock_capture" { 
      "_pi"=P11010; "_po"=LLLLHL; }
   "pattern 2": Call "load_unload" { 
      "uscite[2]"=HHHHLLHLL; "test_si"=101110100; }
   Call "multiclock_capture" { 
      "_pi"=P00010; "_po"=LLHLLH; }
   "pattern 3": Call "load_unload" { 
      "uscite[2]"=LLLLLLLLL; "test_si"=010100010; }
   Call "multiclock_capture" { 
      "_pi"=P10010; "_po"=LHLLHL; }
   "pattern 4": Call "load_unload" { 
      "uscite[2]"=LHLHHHLHH; "test_si"=001001100; }
   Call "multiclock_capture" { 
      "_pi"=P11000; "_po"=LLHHLL; }
   "pattern 5": Call "load_unload" { 
      "uscite[2]"=LLHLLLHHL; "test_si"=110110011; }
   Call "multiclock_capture" { 
      "_pi"=P11010; "_po"=HHLLHH; }
   "pattern 6": Call "load_unload" { 
      "uscite[2]"=LHLHHLLHL; "test_si"=000011100; }
   Call "multiclock_capture" { 
      "_pi"=P01000; "_po"=LLHHLL; }
   "pattern 7": Call "load_unload" { 
      "uscite[2]"=LLLHLHHHH; "test_si"=111011111; }
   Call "multiclock_capture" { 
      "_pi"=010P10; "_po"=HHHHHH; }
   "pattern 8": Call "load_unload" { 
      "uscite[2]"=LLLLLLLLL; "test_si"=101011000; }
   Call "multiclock_capture" { 
      "_pi"=P00000; "_po"=LLLHLH; }
   "pattern 9": Call "load_unload" { 
      "uscite[2]"=LHLLHHLHH; "test_si"=100010001; }
   Call "multiclock_capture" { 
      "_pi"=P00000; "_po"=HLLLLH; }
   "pattern 10": Call "load_unload" { 
      "uscite[2]"=LHHLHHHLH; "test_si"=111000000; }
   Call "multiclock_capture" { 
      "_pi"=P00000; "_po"=LLLLHH; }
   "pattern 11": Call "load_unload" { 
      "uscite[2]"=HHHHLHHLH; "test_si"=110100100; }
   Call "multiclock_capture" { 
      "_pi"=P11010; "_po"=LLHLHH; }
   "pattern 12": Call "load_unload" { 
      "uscite[2]"=LLLHLLHHL; "test_si"=000000110; }
   Call "multiclock_capture" { 
      "_pi"=P01010; "_po"=LHHLLL; }
   "pattern 13": Call "load_unload" { 
      "uscite[2]"=LHLLHHLHH; "test_si"=101101010; }
   Call "multiclock_capture" { 
      "_pi"=P10000; "_po"=LHLHLH; }
   "pattern 14": Call "load_unload" { 
      "uscite[2]"=LHLLHLLHL; "test_si"=100001001; }
   Call "multiclock_capture" { 
      "_pi"=P10000; "_po"=HLLHLH; }
   "pattern 15": Call "load_unload" { 
      "uscite[2]"=LHLLHLLHL; "test_si"=100100001; }
   Call "multiclock_capture" { 
      "_pi"=000P00; "_po"=HLLLLH; }
   "pattern 16": Call "load_unload" { 
      "uscite[2]"=LLLLLLLLL; "test_si"=011010000; }
   Call "multiclock_capture" { 
      "_pi"=P01010; "_po"=LLLLHL; }
   "end 16 unload": Call "load_unload" { 
      "uscite[2]"=LLHLLHHHH; }
}

// Patterns reference 55 V statements, generating 199 test cycles
